# Workflow to ensure build and dependency caches exist for both Linux and Windows

name: Ensure node modules cache

on:
  push:
    branches:
      - main

# Restrict permissions to read-only for safety
permissions:
  contents: read

# Define jobs for Linux and Windows environments
jobs:
  linux:
    name: Linux
    runs-on: [ self-hosted, 1ES.Pool=1es-vscode-ubuntu-22.04-x64 ]
    steps:
      # Checkout repository and include LFS files
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Setup Node.js environment for building and caching
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.x'

      # Restore previously saved build cache to speed up the process
      - name: Restore build cache
        uses: actions/cache@v4
        id: build-cache
        with:
          key: build_cache-${{ hashFiles('build/.cachesalt', 'package-lock.json') }}
          path: .build/build_cache

      # Install dependencies only if cache was not found
      - name: Install dependencies
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: npm ci

      # Create new cache archive when no existing cache is available
      - name: Create build cache archive
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: |
          set -e
          mkdir -p .build
          node build/listBuildCacheFiles.js .build/build_cache_list.txt
          mkdir -p .build/build_cache
          tar -czf .build/build_cache/cache.tgz --files-from .build/build_cache_list.txt

  windows:
    name: Windows
    runs-on: [ self-hosted, 1ES.Pool=1es-vscode-windows-2022-x64 ]
    steps:
      # Checkout repository with Git LFS support
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Setup Node.js environment for Windows build
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.x'

      # Setup Python for cross-language build support
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: 'x64'

      # Restore Windows-specific build cache if available
      - name: Restore build cache
        uses: actions/cache@v4
        id: build-cache
        with:
          key: windows-build_cache-${{ hashFiles('build/.cachesalt', 'package-lock.json') }}
          path: .build/build_cache

      # Install dependencies only when cache isn't hit
      - name: Install dependencies
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: npm ci

      # Create and compress build cache archive using 7-Zip
      - name: Create build cache archive
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -Force .build
          node build/listBuildCacheFiles.js .build/build_cache_list.txt
          mkdir -Force .build/build_cache
          7z.exe a .build/build_cache/cache.7z -mx3 `@.build/build_cache_list.txt
